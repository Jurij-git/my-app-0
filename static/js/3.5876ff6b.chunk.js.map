{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","posts","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","validate","required","placeholder","MyPosts","postsElements","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","action","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.5876ff6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2juuF\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3q5t_\",\"contact\":\"ProfileInfo_contact__7M62p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2MHKJ\",\"posts\":\"MyPosts_posts__3KpxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__11NzN\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n\r\n    //let stateWithSetState = useState(false);\r\n    //let editMode = stateWithSetState[0];\r\n    //let setEditMode = stateWithSetState[1];\r\n\r\n    //destructured assignment\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect (() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () =>\r\n    {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>\r\n    {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) =>\r\n    {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {! editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{status || \"empty\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {\r\n            error &&\r\n            <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n\r\n        <div><button>save</button></div>\r\n        <div>\r\n            <b>Full Name</b>: {createField(\"Full Name\", \"fullname\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>{\r\n            return <div key={key} className = {s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        debugger;\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n        //setEditMode(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={()=>{setEditMode(true)}} profile={profile} isOwner={isOwner}/>\r\n                }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: <b>{contactValue}</b></div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode} >edit</button></div>}\r\n        <div>\r\n            <b>Full Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key =>{\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQUdEyqt1RY9f1S7mCyEN3SeOWAzIQz5UYrQHmDBZmgNuzSU8Mp&usqp=CAU'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like </span> {props.likesCount}\r\n                    </div>\r\n                </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"}\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder=\"Post Message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) =>{\r\n\r\n    //convert posts to <Post message={postsData[0].message} likesCount={postsData[0].likesCount}/>\r\n    let postsElements = props.posts.map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/> )\r\n\r\n    //pass this function to button - callback\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <div>\r\n            My posts\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//using react-redux library\r\n//set data/state from store\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n//set callbacks for action creators\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n//create container component using react-redux, and connect it to store\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nconst Profile = (props) =>{\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     saveProfile={props.saveProfile}\r\n                     updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //avoild refresh cycle\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}/>\r\n    }\r\n}\r\n\r\n//create HOC on ProfileContainer\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// //passing data and callbacks to Profile component\r\n// export default connect(mapStateToProps, {getUserProfile})(withUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}), //3\r\n    withRouter, //2\r\n    withAuthRedirect    //1\r\n)(ProfileContainer);"],"sourceRoot":""}