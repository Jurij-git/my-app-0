{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activelink","Post","props","posts","message","likesCount","MyPosts","postsElements","id","map","p","postsBlock","ProfileInfo","descriptionBlock","Profile","DialogItem","path","dialog","active","name","Message","Dialogs","dialogsElements","messagesElements","dialogs","dialogItems","messages","News","Music","Settings","App","class","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.58769fa8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1wGof\",\"item\":\"Navbar_item__2aiaI\",\"activelink\":\"Navbar_activelink__3I7pN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Vg5h\",\"dialogItems\":\"Dialogs_dialogItems__pPypO\",\"active\":\"Dialogs_active__3ufEh\",\"messages\":\"Dialogs_messages__9SGPZ\",\"message\":\"Dialogs_message__2tpJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1GG2J\",\"posts\":\"MyPosts_posts__1yQ8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3_gjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Fm_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3tUAU\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () =>{\r\n    return <header className={s.header}>\r\n        <img src='https://cdn.shopify.com/shopifycloud/hatchful-web/assets/6fcc76cfd1c59f44d43a485167fb3139.png'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () =>{\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activelink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activelink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" activeClassName={s.activelink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" activeClassName={s.activelink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activelink}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQUdEyqt1RY9f1S7mCyEN3SeOWAzIQz5UYrQHmDBZmgNuzSU8Mp&usqp=CAU'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like </span> {props.likesCount}\r\n                    </div>\r\n                </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = () =>{\r\n\r\n    //data from server\r\n    let posts = [\r\n        {id: 1, message: 'hello', likesCount: 100},\r\n        {id: 2, message: 'how are you', likesCount: 200},\r\n        {id: 3, message: 'fine, and you', likesCount: 300},\r\n    ]\r\n\r\n    //convert posts to <Post message={postsData[0].message} likesCount={postsData[0].likesCount}/>\r\n    let postsElements = posts.map( p => <Post message={p.message} likesCount={p.likesCount}/> )\r\n\r\n    return <div className={s.postsBlock}>\r\n        <div>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    <textarea></textarea>\r\n                </div>\r\n                <div>\r\n                    <button>Add Post</button>\r\n                    <button>Remove</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n                {/*<Post message={postsData[0].message} likesCount={postsData[0].likesCount}/>*/}\r\n                {/*<Post message={postsData[1].message} likesCount={postsData[1].likesCount}/>*/}\r\n                {/*<Post message={postsData[2].message} likesCount={postsData[2].likesCount}/>*/}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () =>{\r\n    return(\r\n        <div>\r\n            <div>\r\n                <img src = \"https://www.visittci.com/core/cover-governors-beach-grand-turk-on-a-calm-day_1024x341.jpg\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                avatar + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = () =>{\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPosts/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) =>{\r\n    let path = \"/dialogs/\"+ props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) =>{\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogs = [\r\n        {id: 1, name: 'Christine'},\r\n        {id: 2, name: 'Pablo'},\r\n        {id: 3, name: 'Alexia'},\r\n        {id: 4, name: 'Alex'},\r\n        {id: 5, name: 'John'},\r\n        {id: 6, name: 'Mary'},\r\n    ]\r\n\r\n    //convert Dialogs to <DialogItem name={dialogsData[0].name} id={dialogsData[0].id}/>\r\n    let dialogsElements = dialogs.map( dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n\r\n    let messages = [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hello'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'ff'},\r\n        {id: 5, message: 'vv'},\r\n        {id: 6, message: 'nn'},\r\n    ]\r\n\r\n    //convert messages to <Message message = {messagesData[0].message}/>\r\n    let messagesElements = messages.map( message => <Message message = {message.message}/>)\r\n\r\n    return(\r\n        <div>\r\n            <div className = {s.dialogs}>\r\n                <div className={s.dialogItems}>\r\n\r\n                    {dialogsElements}\r\n\r\n                    {/*<DialogItem name={dialogsData[0].name} id={dialogsData[0].id}/>*/}\r\n                    {/*<DialogItem name={dialogsData[1].name} id={dialogsData[1].id}/>*/}\r\n                    {/*<DialogItem name={dialogsData[2].name} id={dialogsData[2].id}/>*/}\r\n                    {/*<DialogItem name={dialogsData[3].name} id={dialogsData[3].id}/>*/}\r\n                    {/*<DialogItem name={dialogsData[4].name} id={dialogsData[4].id}/>*/}\r\n                    {/*<DialogItem name={dialogsData[5].name} id={dialogsData[5].id}/>*/}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n\r\n                    {/*<Message message = {messagesData[0].message}/>*/}\r\n                    {/*<Message message = {messagesData[1].message}/>*/}\r\n                    {/*<Message message = {messagesData[2].message}/>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\n\r\n//const App = () => {\r\n//const App = function (){\r\n//function App (){\r\nfunction App (){\r\n  return (\r\n      <BrowserRouter>\r\n      <div className = 'app-wrapper'>\r\n          <Header/>\r\n          <Navbar/>\r\n          <div class='app-wrapper-content'>\r\n              {/*<Route path='/dialogs' component={Dialogs}/>*/}\r\n              {/*<Route path='/profile' component={Profile}/>*/}\r\n              {/*<Route path='/news' component={News}/>*/}\r\n              {/*<Route path='/music' component={Music}/>*/}\r\n              {/*<Route path='/settings' component={Settings}/>*/}\r\n              {/*to pass props:*/}\r\n              <Route path='/dialogs' render={ () => <Dialogs/> }/>\r\n              <Route path='/profile' render={ () => <Profile/> }/>\r\n              <Route path='/news' render={ () => <News/> }/>\r\n              <Route path='/music' render={ () => <Music/> }/>\r\n              <Route path='/settings' render={ () => <Settings/> }/>\r\n          </div>\r\n          {/*<Profile/>*/}\r\n          {/*<Dialogs/>*/}\r\n      </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}