{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","newMessageBody","isAuth","dialogItems","values","sendMessage","compose","connect","dispatch","action","sendMessageCreator","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCUjKC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAaD,EAAME,GAC9B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCnBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,U,yCCqCtCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACd,GACpB,OACI,0BAAMgB,SAAYhB,EAAMiB,cACpB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,wBAEvB,6BAAK,wCAAL,SAOGC,EAlDC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAGdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,GAAI4B,IAAKzB,EAAOH,QAEzG6B,EAAmBN,EAAMO,SAASH,KAAK,SAAAnB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAAWA,EAAQA,QAASoB,IAAKpB,EAAQR,QACnFuB,EAAMQ,eAO3B,OAAKjC,EAAMkC,OAGP,6BACI,yBAAK/B,UAAaC,IAAEwB,SAChB,yBAAKzB,UAAWC,IAAE+B,aACbR,GAEL,yBAAKxB,UAAWC,IAAE4B,UACd,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAfjB,SAACoB,GAEjBpC,EAAMqC,YAAYD,EAAOH,sBAGH,kBAAC,IAAD,CAAU1B,GAAI,Y,wBCa7B+B,sBACXC,aA7BkB,SAACd,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAMF,SAACc,GACtB,MAAM,CACFH,YAAa,SAACJ,GACV,IAAIQ,EAASC,YAAmBT,GAChCO,EAASC,QAkBjBE,IAFWL,CAIdd","file":"static/js/4.4b7edf49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3pRD3\",\"dialogItems\":\"Dialogs_dialogItems__2zM32\",\"active\":\"Dialogs_active__YDXii\",\"messages\":\"Dialogs_messages__2aQ7W\",\"message\":\"Dialogs_message__LXpqJ\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) =>{\r\n    let path = \"/dialogs/\"+ props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) =>{\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    //convert Dialogs to <DialogItem name={dialogsData[0].name} id={dialogsData[0].id}/>\r\n    let dialogsElements = state.dialogs.map( dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>);\r\n    //convert messages to <Message message = {messagesData[0].message}/>\r\n    let messagesElements = state.messages.map( message => <Message message = {message.message} key={message.id}/>)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) =>{\r\n        //alert(values.newMessageBody);\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return(\r\n        <div>\r\n            <div className = {s.dialogs}>\r\n                <div className={s.dialogItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter Your Message\" />\r\n            </div>\r\n            <div><button>Send</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//using react-redux library\r\n//set data/state from store\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage//,\r\n        //isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n//set callbacks\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            let action = sendMessageCreator(newMessageBody);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//create HOC on Dialogs\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n//\r\n// //create container component using react-redux, and connect it to store\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n// export default DialogsContainer;\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),   //2\r\n    withAuthRedirect    //1\r\n)\r\n(Dialogs);;"],"sourceRoot":""}