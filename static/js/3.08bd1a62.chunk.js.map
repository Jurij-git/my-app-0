{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Post","posts","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPosts","postsElements","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","action","addPostActionCreator","Profile","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.08bd1a62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2juuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2MHKJ\",\"posts\":\"MyPosts_posts__3KpxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__11NzN\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n\r\n    //let stateWithSetState = useState(false);\r\n    //let editMode = stateWithSetState[0];\r\n    //let setEditMode = stateWithSetState[1];\r\n\r\n    //destructured assignment\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect (() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () =>\r\n    {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>\r\n    {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) =>\r\n    {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {! editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"empty\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) =>{\r\n    return(\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return <div className={s.posts}>\r\n                <div className={s.item}>\r\n                    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQUdEyqt1RY9f1S7mCyEN3SeOWAzIQz5UYrQHmDBZmgNuzSU8Mp&usqp=CAU'/>\r\n                    {props.message}\r\n                    <div>\r\n                        <span>like </span> {props.likesCount}\r\n                    </div>\r\n                </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"}\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder=\"Post Message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) =>{\r\n\r\n    //convert posts to <Post message={postsData[0].message} likesCount={postsData[0].likesCount}/>\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/> )\r\n\r\n    //pass this function to button - callback\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <div>\r\n            My posts\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//using react-redux library\r\n//set data/state from store\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n//set callbacks for action creators\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n//create container component using react-redux, and connect it to store\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nconst Profile = (props) =>{\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\n//create HOC on ProfileContainer\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// //passing data and callbacks to Profile component\r\n// export default connect(mapStateToProps, {getUserProfile})(withUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), //3\r\n    withRouter, //2\r\n    withAuthRedirect    //1\r\n)(ProfileContainer);"],"sourceRoot":""}